{{- if .Values.upgradeCrdsJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "velero.fullname" . }}-upgrade-crds
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: {{ include "velero.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "velero.chart" . }}
spec:
  backoffLimit: 3
  template:
    metadata:
      name: velero-upgrade-crds
      {{- if .Values.upgradeCrdsJob.podLabels }}
      labels:
        {{- with .Values.upgradeCrdsJob.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.upgradeCrdsJob.podAnnotations }}
      annotations:
        {{- with .Values.upgradeCrdsJob.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
    spec:
    {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
    {{- end }}
      serviceAccountName: {{ include "velero.serverServiceAccount" . }}
      initContainers:
        - name: velero
      {{- if .Values.image.digest }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}"
      {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - /velero install --crds-only --dry-run -o yaml > /tmp/crds.yaml
          volumeMounts:
            - mountPath: /tmp
              name: crds
      containers:
        - name: kubectl
        {{- if .Values.upgradeCrdsJob.image.digest }}
          image: "{{ .Values.upgradeCrdsJob.image.repository }}@{{ .Values.upgradeCrdsJob.image.digest }}"
        {{- else }}
          image: "{{ .Values.upgradeCrdsJob.image.repository }}:{{ .Values.upgradeCrdsJob.image.tag }}"
        {{- end }}
          imagePullPolicy: {{ .Values.upgradeCrdsJob.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - kubectl apply -f /tmp/crds.yaml
          volumeMounts:
            - mountPath: /tmp
              name: crds
      volumes:
        - name: crds
          emptyDir: {}
      restartPolicy: OnFailure
{{- end }}
